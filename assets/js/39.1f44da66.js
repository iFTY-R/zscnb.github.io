(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{503:function(v,_,e){"use strict";e.r(_);var t=e(2),i=function(v){v.options.__data__block__={flowchart_1a96284b:"st=>start: Start|past:>http://www.google.com[blank]\ne=>end: End|future:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|future\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e"}},a=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("three"),v._v(" "),e("FlowChart",{attrs:{id:"flowchart_1a96284b",code:v.$dataBlock.flowchart_1a96284b,preset:"vue"}}),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#前言"}},[v._v("前言")])]),e("li",[e("a",{attrs:{href:"#计算机图形学"}},[v._v("计算机图形学")])]),e("li",[e("a",{attrs:{href:"#三维图形程序架构"}},[v._v("三维图形程序架构")])]),e("li",[e("a",{attrs:{href:"#gpu渲染管线"}},[v._v("GPU渲染管线")])]),e("li",[e("a",{attrs:{href:"#webgl概述"}},[v._v("WebGL概述")])]),e("li",[e("a",{attrs:{href:"#three-js概述"}},[v._v("Three.js概述")])]),e("li",[e("a",{attrs:{href:"#three-js程序结构"}},[v._v("Three.js程序结构")])]),e("li",[e("a",{attrs:{href:"#大概一个场景构成的过程"}},[v._v("大概一个场景构成的过程")])])])]),e("p"),v._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),e("p",[v._v("目前大前端的方向大致有：网页、小程序、H5游戏、移动端、客户端、服务端、图形3D、AR/VR、音视频、人工智能、区块链、网络安全等等。")]),v._v(" "),e("p",[v._v("随着5G的到来，所有的网页或者程序都会趋于图形化，游戏化，3D化，强交互的特性已经是一个产品必不可少的需求，前端工程师从此变成人机交互体验设计师，因此前端的图形3D未来将会是个热门方向。")]),v._v(" "),e("h2",{attrs:{id:"计算机图形学"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算机图形学"}},[v._v("#")]),v._v(" 计算机图形学")]),v._v(" "),e("p",[v._v("计算机图形学是研究怎样利用计算机来显示、生成和处理图形的原理、方法和技术的一门学科。")]),v._v(" "),e("p",[e("strong",{staticStyle:{color:"#00b77f"}},[v._v("计算机图形学经历了三个历史阶段：")])]),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("建立学科阶段（50年代）")])]),v._v(" "),e("ul",[e("li",[v._v("电子数字积分计算机")]),v._v(" "),e("li",[v._v("阴极射线管")]),v._v(" "),e("li",[v._v("半自动防空系统+光笔")]),v._v(" "),e("li",[v._v("MIT论文首次提出计算机图形学")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("光栅图形学阶段（70年代）")])]),v._v(" "),e("ul",[e("li",[v._v("光栅扫描图形显示器")]),v._v(" "),e("li",[v._v("第一届SIGGRAPH计算机图形学交互技术学术会议")]),v._v(" "),e("li",[v._v("各种图形软件标准+图形系统")]),v._v(" "),e("li",[v._v("各种图形渲染技术")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("真实感图形学阶段（90年代）")])]),v._v(" "),e("ul",[e("li",[v._v("工业化图形学标准OpenGL和DirectX")]),v._v(" "),e("li",[v._v("GPU图形处理器")]),v._v(" "),e("li",[v._v("建模更逼真、光线追踪算法、细节贴图、硬件提升")]),v._v(" "),e("li",[v._v("多元化+学科交叉")])])])]),v._v(" "),e("p",[e("strong",{staticStyle:{color:"#00b77f"}},[v._v("图形学应用领域:")])]),v._v(" "),e("ul",[e("li",[v._v("计算机辅助设计")]),v._v(" "),e("li",[v._v("虚拟现实环境")]),v._v(" "),e("li",[v._v("科学计算可视化")]),v._v(" "),e("li",[v._v("影片")]),v._v(" "),e("li",[v._v("游戏")])]),v._v(" "),e("p",[e("strong",{staticStyle:{color:"#00b77f"}},[v._v("图形学研究方向:")])]),v._v(" "),e("ul",[e("li",[v._v("造型技术")]),v._v(" "),e("li",[v._v("动作表情捕捉技术")]),v._v(" "),e("li",[v._v("真实感渲染技术")]),v._v(" "),e("li",[v._v("管线优化技术")]),v._v(" "),e("li",[v._v("图形学与深度学习技术")])]),v._v(" "),e("h2",{attrs:{id:"三维图形程序架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三维图形程序架构"}},[v._v("#")]),v._v(" 三维图形程序架构")]),v._v(" "),e("ul",[e("li",[v._v("应用程序（CPU+着色器代码）")]),v._v(" "),e("li",[v._v("显卡驱动（OpenGL驱动或者DirectX驱动）")]),v._v(" "),e("li",[v._v("图形处理器（GPU）")]),v._v(" "),e("li",[v._v("帧缓冲存储器（帧缓存）")]),v._v(" "),e("li",[v._v("输入设备\n"),e("ul",[e("li",[v._v("穿孔纸")]),v._v(" "),e("li",[v._v("光笔")]),v._v(" "),e("li",[v._v("鼠标")]),v._v(" "),e("li",[v._v("触摸屏")]),v._v(" "),e("li",[v._v("数据手套")]),v._v(" "),e("li",[v._v("数据衣")]),v._v(" "),e("li",[v._v("力反馈器")])])]),v._v(" "),e("li",[v._v("显示设备\n"),e("ul",[e("li",[v._v("CRT显示器")]),v._v(" "),e("li",[v._v("平板显示器")]),v._v(" "),e("li",[v._v("液晶显示器")]),v._v(" "),e("li",[v._v("等离子体显示器")]),v._v(" "),e("li",[v._v("LED显示器")]),v._v(" "),e("li",[v._v("三维立体眼镜")]),v._v(" "),e("li",[v._v("头盔显示器")]),v._v(" "),e("li",[v._v("眼镜盒子")]),v._v(" "),e("li",[v._v("裸眼立体显示器")]),v._v(" "),e("li",[v._v("气体投影")])])]),v._v(" "),e("li",[v._v("输出设备\n"),e("ul",[e("li",[v._v("打印机")]),v._v(" "),e("li",[v._v("绘图仪")])])])]),v._v(" "),e("h2",{attrs:{id:"gpu渲染管线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gpu渲染管线"}},[v._v("#")]),v._v(" GPU渲染管线")]),v._v(" "),e("p",[v._v("渲染管线就是在给定虚拟相机、三维物体、光源、照明模式、纹理等等条件下，GPU生成一副二维图像的过程。")]),v._v(" "),e("p",[v._v("图形渲染管线分为三个阶段，第一个阶段由CPU完成，后两个阶段由GPU完成：")]),v._v(" "),e("ul",[e("li",[v._v("应用阶段：将绘制几何体所需的顶点、光照、摄像机位置、纹理数据参数输入到绘制管线的下一个阶段")]),v._v(" "),e("li",[v._v("几何阶段：将数据放入三维坐标系中，经过计算、透视角度变换、裁剪、光照着色映射到二维屏幕坐标系中，将各个数据输入到光栅化阶段\n"),e("ul",[e("li",[v._v("顶点着色器（可编程阶段）：模型变换、视图变换、顶点着色")]),v._v(" "),e("li",[v._v("几何着色器、曲面细分着色器（可选编程阶段）：顶点增删、曲面细分")]),v._v(" "),e("li",[v._v("裁剪（可配置阶段）：投影变换、裁剪")]),v._v(" "),e("li",[v._v("屏幕映射（固定）")])])]),v._v(" "),e("li",[v._v("光栅化阶段：根据变换投影过后的顶点、颜色、纹理坐标等数据，得到输出到屏幕每个像素的正确配色，输入到帧缓存\n"),e("ul",[e("li",[v._v("三角形设置（固定）：顶点转换成三角形网格")]),v._v(" "),e("li",[v._v("三角形遍历（固定）：网格转换成像素点")]),v._v(" "),e("li",[v._v("片元着色器（可编程阶段）：计算每一个片元的颜色值")]),v._v(" "),e("li",[v._v("逐片元操作（可配置阶段）：通过融合计算出每一个像素点的颜色值")])])])]),v._v(" "),e("h2",{attrs:{id:"webgl概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webgl概述"}},[v._v("#")]),v._v(" WebGL概述")]),v._v(" "),e("p",[v._v("OpenGL架构委员会（OpenGL Architecture Review Board）制定了一种具备可移植性的2D/3D图形规范叫OpenGL，该规范定义了用来操作图形和图片必须要有的函数API，使程序员不用直接跟GPU打交道，而是跟抽象出来的通用接口打交道，OpenGL规范定义的API内部实现由各个GPU厂商像AMD、Intel、Nvidia做的显卡驱动来实现并翻译成GPU指令来运行三维图形软件，除了OpenGL这一套API规范以外，还有其他图形API规范，比如Direct3D、Vulkan、Metal等等。OpenGL规范在与微软的Dirct3D规范激烈竞争中一度落后，之后被Khronos Group管理的精简OpenGL ES取代，发展迅猛。")]),v._v(" "),e("p",[v._v("GPU绘制图形的各方面能力都比CPU强，其中着色器Shader是运行在GPU上的程序，主要来处理和渲染图形，自定义渲染图形时的动画效果，CPU中OpenGL程序里编写的着色器代码通过接口传给GPU中的着色器并执行，编写着色器代码也就意味着面向GPU编程，这也是客户端游戏开发的方式，着色器语言目前有基于OpenGL的GLSL ES（OpenGL Shading Language ES），基于Direct3D 的HLSL（High Level Shading Language），还有NVIDIA 公司的Cg（C for Graphic）语言等等。")]),v._v(" "),e("p",[v._v("WebGL是一套基于OpenGL ES规范封装的面向GPU编程的3D绘图DOM API，或者说是OpenGL浏览器端运行环境，需要大量地配合色器语言GLSL ES（OpenGL Shading Language ES）在底层调用驱动上实现好的OpenGL绘图方法来控制GPU绘制图形，同时还依赖于H5的Canvas元素，用JS拿到从Canvas元素返回的WebGL3D绘图上下文对象才能调用WebGL绘图函数并配合着色器语言GLSL来绘图。")]),v._v(" "),e("p",[v._v("Canvas是H5新增的画布元素，可以通过Canvas选择的渲染上下文暴露的API直接在画布上绘图，渲染上下文主要有基于CanvasRenderingContext2D的2D上下文，也有基于WebGL的3D上下文，也有基于WebGL2的3D上下文。")]),v._v(" "),e("p",[v._v("Canvas2D固定渲染管线不需要也不允许自定义顶点渲染和像素渲染的具体逻辑，它内部已经固化了一套完整的渲染流程，只需要开发者在CPU代码端输入渲染所需要的参数并指定特定的开关，就能完成不同的渲染；WebGL3D可编程渲染管线使得开发者可以根据自己的具体需要来编写顶点渲染和像素渲染中的具体逻辑，可最大程度的简化渲染管线的逻辑以提高渲染效率，也可自己实现特定的算法和逻辑来渲染出固定管线无法渲染的效果，具有很高的可定制性，但同时也对开发者提出了更高的要求，关键点就在于着色器语言GLSL的加入。")]),v._v(" "),e("h2",{attrs:{id:"three-js概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#three-js概述"}},[v._v("#")]),v._v(" Three.js概述")]),v._v(" "),e("p",[v._v("直接使用WebGL编程还是很复杂的，编程者需要知道WebGL的底层细节，并且学习复杂的着色语言来获得WebGL的大部分功能。Three.js是一个对原生WebGL的封装库，同一个效果，用WebGL写需要280行代码，但使用Three.js只需要30行代码，他们的关系就好比Javascript和jQuery。Three.js提供了很多很简单的关于WebGL特性的JavaScript API，所以用户不需要详细地学习着色器语言，就能创作出好看的三维图形。")]),v._v(" "),e("h2",{attrs:{id:"three-js程序结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#three-js程序结构"}},[v._v("#")]),v._v(" Three.js程序结构")]),v._v(" "),e("ul",[e("li",[v._v("Scene场景")]),v._v(" "),e("li",[v._v("Geometry几何体\n"),e("ul",[e("li",[v._v("BoxGeometry立方体")]),v._v(" "),e("li",[v._v("SphereGeometry球体")]),v._v(" "),e("li",[v._v("CylinderGeometry圆柱")]),v._v(" "),e("li",[v._v("自定义几何体（BufferGeometry+BufferAttribute）")])])]),v._v(" "),e("li",[v._v("材质\n"),e("ul",[e("li",[v._v("点材质\n"),e("ul",[e("li",[v._v("PointsMaterial")])])]),v._v(" "),e("li",[v._v("线材质\n"),e("ul",[e("li",[v._v("LineBasicMaterial")]),v._v(" "),e("li",[v._v("LineDashedMaterial")])])]),v._v(" "),e("li",[v._v("网格材质\n"),e("ul",[e("li",[v._v("MeshBasicMaterial 不受光照影响")]),v._v(" "),e("li",[v._v("MeshLambertMaterial 漫反射")]),v._v(" "),e("li",[v._v("MeshPhongMaterial 镜面反射")]),v._v(" "),e("li",[v._v("MeshStandardMaterial 金属、玻璃等效果")])])]),v._v(" "),e("li",[v._v("精灵材质\n"),e("ul",[e("li",[v._v("SpriteMaterial")])])]),v._v(" "),e("li",[v._v("自定义着色器材质\n"),e("ul",[e("li",[v._v("RawShaderMaterial")]),v._v(" "),e("li",[v._v("ShaderMaterial")])])]),v._v(" "),e("li",[v._v("模型\n"),e("ul",[e("li",[v._v("Points点模型")]),v._v(" "),e("li",[v._v("Line线模型")]),v._v(" "),e("li",[v._v("Mesh网格模型")]),v._v(" "),e("li",[v._v("Sprite精灵模型")])])]),v._v(" "),e("li",[v._v("Light光源\n"),e("ul",[e("li",[v._v("PointLight点光源")]),v._v(" "),e("li",[v._v("AmbientLight环境光")]),v._v(" "),e("li",[v._v("DirectionalLight平行光")]),v._v(" "),e("li",[v._v("SpotLight聚光灯光源")])])]),v._v(" "),e("li",[v._v("Camera相机\n"),e("ul",[e("li",[v._v("OrthographicCamera正投影相机")]),v._v(" "),e("li",[v._v("PerspectiveCamera透视投影相机")])])]),v._v(" "),e("li",[v._v("Renderer渲染器")])])])]),v._v(" "),e("h2",{attrs:{id:"大概一个场景构成的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大概一个场景构成的过程"}},[v._v("#")]),v._v(" 大概一个场景构成的过程")]),v._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[v._v("Camera --"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" Scene --"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" Renderer --"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" render\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("add")]),v._v(" │            │\n                 Mesh          │\n                  │ Animation ─┘\n        Geometry ─┤\n                  │\n        Material ─┘\n")])])]),e("p",[e("strong",[v._v("文字解释：")])])],1)}),[],!1,null,null,null);"function"==typeof i&&i(a);_.default=a.exports}}]);